<?php

namespace app\controllers;

use Yii;
use app\models\Products;
use yii\filters\AccessControl;
use yii\web\Controller;
use yii\web\NotFoundHttpException;
use yii\filters\VerbFilter;

/**
 * ProductsController implements the CRUD actions for Products model.
 */
class ProductsController extends Controller
{
    /**
     * @inheritdoc
     */
    public function behaviors()
    {
        return [
            'access' => [
                'class' => AccessControl::className(),
                //  'only' => ['logout'],
                'rules' => [
                    [
                        'actions' => ['index','create','update','delete','view','duplicate',
                            'food_menu', 'additional_service'],
                        'allow' => true,
                        'roles' => ['admin'],
                    ],
                ],
            ],
            'verbs' => [

                'class' => VerbFilter::className(),
                'actions' => [
                    'delete' => ['POST'],
                ],
            ],
        ];
    }

    public function init()
    {
        if(!isset($_SESSION)){
            session_start();
        }
        parent::init(); // TODO: Change the autogenerated stub
    }

    /**
     * Lists all Products models.
     * @return mixed
     */
    public function actionIndex()
    {
        $searchModel = new Products();
        $dataProvider = $searchModel->search(Yii::$app->request->queryParams);

        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
        ]);
    }

    /**
     * Lists all Products food menu models.
     * @return mixed
     */
    public function actionFood_menu()
    {
        $searchModel = new Products();
        $searchModel->module = 'food_menu';
        $dataProvider = $searchModel->search(['module'=>'food_menu']);

        $_SESSION['breadcrumbs'] = ['label'=>Yii::t('app','Products : Food Menu'),'url'=>['products/food_menu']];
        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
            'title' => Yii::t('app','Products : Food Menu'),
        ]);
    }

    /**
     * Lists all Products additional servicemodels.
     * @return mixed
     */
    public function actionAdditional_service()
    {

        $searchModel = new Products();
        $searchModel->module = 'additional_services';
        $dataProvider = $searchModel->search(['module'=>'additional_services']);
        $_SESSION['breadcrumbs'] = ['label'=>Yii::t('app','Products : Additional Service'),'url'=>['products/additional_service']];
        return $this->render('index', [
            'searchModel' => $searchModel,
            'dataProvider' => $dataProvider,
            'title' => Yii::t('app','Products : Additional Service'),
        ]);
    }

    /**
     * Displays a single Products model.
     * @param integer $id
     * @return mixed
     */
    public function actionView($id)
    {
        return $this->render('view', [
            'model' => $this->findModel($id),
        ]);
    }

    /**
     * Creates a new Products model.
     * If creation is successful, the browser will be redirected to the 'view' page.
     * @return mixed
     */
    public function actionCreate()
    {
        $model = new Products();
         if ($model->load(Yii::$app->request->post()) && $model->save()) {
             $model->saveProductItems(  Yii::$app->request  );
            return $this->redirect(['view', 'id' => $model->prod_id]);
        } else {
            return $this->render('create', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Updates an existing Products model.
     * If update is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */
    public function actionUpdate($id)
    {
         $model = $this->findModel($id);
        if ($model->load(Yii::$app->request->post()) && $model->save()) {
	        
	        // ------- check and save food menu items 
			//if(  $model->page_link  == 'food_menu' ) {   $this->SaveFoodMenu( $model->prod_id  );  }
			 $model->saveProductItems(  Yii::$app->request  );
	        
            return $this->redirect(['view', 'id' => $model->prod_id ]);
        } else {
            return $this->render('update', [
                'model' => $model,
            ]);
        }
    }

    /**
     * Deletes an existing Products model.
     * If deletion is successful, the browser will be redirected to the 'index' page.
     * @param integer $id
     * @return mixed
     */
    public function actionDelete($id)
    {
        $model = $this->findModel($id);
        $route = $model->module =='additional_services' ? "additional_service": "food_menu";
        $model->delete();

        return $this->redirect([$route]);
    }

    /**
     * Duplicates an existing Products model.
     * If duplicate is successful, the browser will be redirected to the 'view' page.
     * @param integer $id
     * @return mixed
     */

    public function actionDuplicate($id){
        $model = $this->findModel($id)->duplicate();
        return $this->redirect(['view', 'id' => $model->prod_id]);
    }

    /**
     * Finds the Products model based on its primary key value.
     * If the model is not found, a 404 HTTP exception will be thrown.
     * @param integer $id
     * @return Products the loaded model
     * @throws NotFoundHttpException if the model cannot be found
     */
    protected function findModel($id)
    {
        if (($model = Products::findOne($id)) !== null) {
            return $model;
        } else {
            throw new NotFoundHttpException('The requested page does not exist.');
        }
    }

}
